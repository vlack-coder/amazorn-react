import { State } from './types';
export declare type ArrayStateApi<T> = {
    clear: () => void;
    pop: () => void;
    push: (...vals: T[]) => void;
    shift: () => void;
    unshift: (...vals: T[]) => void;
    reverse: () => void;
    insertAt: (val: T, index: number) => void;
    upsertAt: (val: T, index: number) => void;
    deleteAt: (index: number) => void;
    state: T[];
    setState: (val: T[]) => void;
};
declare type Props<T> = {
    state: State<T>;
    setState: (state: State<T>) => void;
};
export declare const arrayStateApiFactory: <T>({ state, setState }: Props<T>) => ArrayStateApi<T>;
export declare const useArrayStateApi: <T>(initialState: T[]) => ArrayStateApi<T>;
export {};
